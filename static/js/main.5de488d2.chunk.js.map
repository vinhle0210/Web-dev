{"version":3,"sources":["components/Cards/Card/Card.module.css","App.module.css","components/Chart/Chart.jsx","api/index.js","components/Chart/TimeChart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Card/Card.jsx","components/Cards/Cards.jsx","components/Table/Table.jsx","app.js","index.js","components/Chart/Chart.module.css","components/Cards/Cards.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Chart","data","confirmed","recovered","deaths","country","barChart","className","styles","bar","labels","datasets","label","backgroundColor","value","options","legend","display","plugins","title","text","container","style","margin","url","fetchData","a","changeableUrl","axios","get","lastUpdate","fetchDailyData","fetchCountries","countries","map","name","fetchData_Table","fetchCountries_Table","TimeChart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","lineChart","line","date","Date","toLocaleDateString","cases","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","CardComponent","cardTitle","cardSubtitle","Grid","item","xs","md","component","Card","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","toDateString","Info","spacing","justify","infected","Table","countries_List","stats","striped","bordered","hover","renderCountries","country_map","index","App","state","country_List","setState","this","forEach","concat","CountryPicker","Cards","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,yKCuC9CC,EAnCD,SAAC,GAAyD,IAAD,IAAtDC,KAAQC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAUC,EAAc,EAAdA,QAEjDC,EACJJ,EACE,cAAC,IAAD,CAAKK,UAAWC,IAAOC,IACrBR,KAAM,CACJS,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CACR,CACEC,MAAO,WACPC,gBAAiB,CAAC,uBAAuB,sBAAuB,qBAChEZ,KAAM,CAACC,EAAUY,MAAOX,EAAUW,MAAOV,EAAOU,UAGtDC,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,QAAS,CACPC,MAAO,CACHF,SAAS,EACTG,KAAM,8CAKd,KAGN,OACE,sBAAKb,UAAWC,IAAOa,UAAvB,UACGhB,GAAW,qBAAIiB,MAAO,CAACC,OAAQ,QAApB,uDAAwElB,KACnFA,EAAUC,EAAW,S,yBCjCtBkB,EAAM,iCAECC,EAAS,uCAAG,WAAOpB,GAAP,2BAAAqB,EAAA,6DACnBC,EAAgBH,EAEhBnB,IACFsB,EAAa,UAAMH,EAAN,sBAAuBnB,IAJf,kBAQgDuB,IAAMC,IAAIF,GAR1D,2BAQb1B,KAAQC,EARK,EAQLA,UAAWC,EARN,EAQMA,UAAWC,EARjB,EAQiBA,OAAQ0B,EARzB,EAQyBA,WARzB,kBAUd,CAAE5B,YAAWC,YAAWC,SAAQ0B,eAVlB,2HAAH,sDAiBTC,EAAc,uCAAG,8BAAAL,EAAA,+EAEDE,IAAMC,IAAI,0CAFT,uBAEhB5B,EAFgB,EAEhBA,KAFgB,kBAmBjBA,GAnBiB,wHAAH,qDA0Bd+B,EAAc,uCAAG,8BAAAN,EAAA,+EAEYE,IAAMC,IAAN,UAAaL,EAAb,eAFZ,uBAEVS,EAFU,EAElBhC,KAAQgC,UAFU,kBAInBA,EAAUC,KAAI,SAAC7B,GAAD,OAAaA,EAAQ8B,SAJhB,wHAAH,qDAWdC,EAAe,uCAAG,WAAO/B,GAAP,mBAAAqB,EAAA,6DACzBC,EAAgBH,EAEhBnB,IACFsB,EAAa,UAAMH,EAAN,sBAAuBnB,EAAQ8B,OAJjB,kBASJP,IAAMC,IAAIF,GATN,uBASnB1B,EATmB,EASnBA,KATmB,kBAWpB,CAAEA,SAXkB,2HAAH,sDAiBfoC,EAAoB,uCAAG,8BAAAX,EAAA,+EAGME,IAAMC,IAAN,UAAaL,EAAb,eAHN,uBAGhBS,EAHgB,EAGvBhC,KAAOgC,UAHgB,kBAOzBA,GAPyB,wHAAH,qDC5BlBK,EAxCG,WAChB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,YACQ,uCAAG,4BAAAhB,EAAA,sEACcK,IADd,OACXY,EADW,OAGjBF,EAAaE,GAHI,2CAAH,qDAOhBC,KACC,IAEH,IAAMC,EACJL,EAAU,GACR,cAAC,IAAD,CAAMjC,UAAWC,IAAOsC,KACtB7C,KAAM,CACJS,OAAQ8B,EAAUN,KAAI,gBAAGa,EAAH,EAAGA,KAAH,OAAc,IAAIC,KAAKD,GAAME,wBACnDtC,SAAU,CACR,CACAV,KAAMuC,EAAUN,KAAI,SAACjC,GAAD,OAAUA,EAAKiD,SACnCtC,MAAO,QACPuC,YAAa,UACbC,MAAM,OAKV,KAGN,OACE,sBAAK7C,UAAWC,IAAOa,UAAvB,UACE,oBAAIC,MAAO,CAACC,OAAQ,QAApB,0BACCsB,M,mCCfQQ,EApBG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBACnB,EAAkCf,mBAAS,IAA3C,mBAAON,EAAP,KAAkBsB,EAAlB,KASA,OARAb,qBAAU,YACM,uCAAG,sBAAAhB,EAAA,kEACf6B,EADe,SACIvB,IADJ,6EAAH,qDAIdwB,KACC,IAGD,cAACC,EAAA,EAAD,CAAalD,UAAWC,IAAOkD,YAA/B,SACE,eAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOjD,QAA5E,UACE,wBAAQA,MAAM,GAAd,oBACCmB,EAAUC,KAAI,SAAC7B,EAAS2D,GAAV,OAAgB,wBAAgBlD,MAAOT,EAAvB,SAAiCA,GAApB2D,Y,yFCKrCC,EAnBO,SAAC,GAAD,IAAG1D,EAAH,EAAGA,UAAW2D,EAAd,EAAcA,UAAWpD,EAAzB,EAAyBA,MAAOgB,EAAhC,EAAgCA,WAAYqC,EAA5C,EAA4CA,aAA5C,OACpB,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMlE,UAAWmE,IAAGlE,IAAOmE,KAAMpE,GAAtE,SACE,eAACqE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,SACGb,IAEH,cAACW,EAAA,EAAD,CAAYG,QAAQ,KAAKR,UAAU,KAAnC,SACE,cAAC,IAAD,CAASS,MAAO,EAAGC,IAAKpE,EAAOqE,SAAU,KAAMC,UAAU,QAE3D,cAACP,EAAA,EAAD,CAAYC,MAAM,gBAAlB,SACG,IAAI9B,KAAKlB,GAAYuD,iBAExB,cAACR,EAAA,EAAD,CAAYG,QAAQ,QAAQR,UAAU,IAAtC,SACGL,U,iBCmBMmB,EAlCF,SAAC,GAA4D,IAAD,IAAzDrF,KAAQC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OAAQ0B,EAAmB,EAAnBA,WACpD,OAAK5B,EAKH,qBAAKK,UAAWC,IAAOa,UAAvB,SACE,eAAC+C,EAAA,EAAD,CAAM/C,WAAS,EAACkE,QAAS,EAAGC,QAAQ,SAApC,UACE,cAAC,EAAD,CACEjF,UAAWC,IAAOiF,SAClBvB,UAAU,WACVpD,MAAOZ,EAAUY,MACjBgB,WAAYA,EACZqC,aAAa,0CAEf,cAAC,EAAD,CACE5D,UAAWC,IAAOL,UAClB+D,UAAU,YACVpD,MAAOX,EAAUW,MACjBgB,WAAYA,EACZqC,aAAa,wCAEf,cAAC,EAAD,CACE5D,UAAWC,IAAOJ,OAClB8D,UAAU,SACVpD,MAAOV,EAAOU,MACdgB,WAAYA,EACZqC,aAAa,8CAzBZ,c,SCqCIuB,G,OAtCD,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,eAAkC,EAAlBC,MAAkB,EAAV3F,KAqBpC,OACI,eAAC,IAAD,CAAsB4F,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA5C,UACE,gCACE,+BACE,yCACA,2CACA,2CACA,6CAGJ,gCAhBc,SAACC,GACnB,GAAIL,EACF,OAAOA,EAAezD,IAAI8D,GAetBC,EA1BgB,SAACN,EAAgBO,GACvC,OACE,6BACQ,6BAAKP,EAAexD,QADjB+D,a,kBCmDJC,E,4MAzDbC,M,aACEnG,KAAM,GACNI,QAAS,GACTuF,MAAQ,GACRS,aAAe,I,QACP,I,EAwBV/C,oB,uCAAsB,WAAOjD,GAAP,eAAAqB,EAAA,sEACDD,EAAUpB,GADT,OACdJ,EADc,OAEL,KAAZI,EACD,EAAKiG,SAAS,CAACrG,OAAMI,QAAS,WAG9B,EAAKiG,SAAS,CAAErG,OAAMI,QAASA,IANb,2C,oJArBtB,qCAAAqB,EAAA,sEACqBD,IADrB,cACQxB,EADR,gBAG+BoC,IAH/B,OAGQsD,EAHR,OAIEY,KAAKD,SAAS,CAACX,mBAEfY,KAAKH,MAAMT,eAAea,QAA1B,uCAAmC,WAAOnG,GAAP,eAAAqB,EAAA,sEACbU,EAAgB/B,GADH,OAC3BuF,EAD2B,OAIjC,EAAKU,SAAS,CACZV,MAAO,EAAKQ,MAAMR,MAAMa,OAAO,CAACb,MALD,2CAAnC,kCAAAW,KAAA,gBAYAA,KAAKD,SAAS,CAAErG,SAlBlB,gD,0EA+BA,WACE,MAAiDsG,KAAKH,MAA9CnG,EAAR,EAAQA,KAAMI,EAAd,EAAcA,QAASsF,EAAvB,EAAuBA,eAAgBC,EAAvC,EAAuCA,MAEvC,OACE,sBAAKrF,UAAWC,IAAOa,UAAvB,UACA,cAACqF,EAAD,CAAepD,oBAAqBiD,KAAKjD,sBACvC,cAACqD,EAAD,CAAO1G,KAAMA,IACb,cAAC,EAAD,CAAOA,KAAMA,EAAMI,QAASA,IAC5B,cAAC,EAAD,CAAWJ,KAAMA,EAAMI,QAASA,IAGhC,cAAC,EAAD,CAAOsF,eAAkBA,EAAgBC,MAASA,EAAO3F,KAAMA,W,GAnDrD2G,IAAMC,W,OCDxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,mBCLjDnH,EAAOC,QAAU,CAAC,UAAY,yBAAyB,IAAM,mBAAmB,KAAO,sB,mBCAvFD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,mBCAxID,EAAOC,QAAU,CAAC,YAAc,sC","file":"static/js/main.5de488d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card___m7hA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3FWL4\",\"image\":\"App_image__o6g2d\"};","import React, { useState, useEffect } from 'react';\nimport {  Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n\n  const barChart = (\n    confirmed ? (\n      <Bar className={styles.bar}\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'Infected',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)','rgba(0, 255 ,0,0.5)', 'rgba(255,0,0, 0.5'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            }],\n        }}\n        options={{\n          legend: { display: false },\n          plugins: {\n            title: {\n                display: true,\n                text: 'Confirmed Cases Vs Recovered Vs Deaths'\n            }\n        }\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country && <h3 style={{margin: 'auto'}}>Confirmed Cases Vs Recovered Vs Deaths in {country}</h3>}\n      {country ? barChart : null}\n    </div>\n  );\n};\n\nexport default Chart;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\n// Instead of Global, it fetches the daily data for the US\nexport const fetchDailyData = async () => {\n    try {\n      const { data } = await axios.get('https://disease.sh/v3/covid-19/nyt/usa');\n\n      // var updated_data = [];\n      // var i = data.length -14;\n\n      // for (i; i < data.length; i++){\n      //   var date_info = data[i].date;\n      //   var cases_info = data[i].cases;\n\n\n      //   var data_dict = {};\n      //   data_dict['date'] = date_info;\n      //   data_dict['cases'] = cases_info;\n\n      //   updated_data.push(data_dict);\n\n      // }\n      return data;\n      // return updated_data;\n    } catch (error) {\n      return error;\n    }\n  };\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n\n};\n\nexport const fetchData_Table = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country.name}`;\n  }\n\n  try {\n    // const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\n    const { data } = await axios.get(changeableUrl);\n\n    return { data };\n    // return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\nexport const fetchCountries_Table = async () => {\n  try {\n    // const { data: { countries } } = await axios.get(`${url}/countries`);\n    const {  data: {countries}  } = await axios.get(`${url}/countries`);\n\n    // console.log({countries});\n    // return countries.map((country) => country.name);\n    return countries;\n  } catch (error) {\n    return error;\n  }\n\n};\n","import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst TimeChart = () => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n      // console.log(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line className={styles.line}\n        data={{\n          labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\n          datasets: [\n            {\n            data: dailyData.map((data) => data.cases),\n            label: 'Cases',\n            borderColor: '#3333ff',\n            fill: true,\n            },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      <h3 style={{margin: 'auto'}}>Cases in USA</h3>\n      {lineChart}\n    </div>\n  );\n};\n\nexport default TimeChart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Card.module.css';\n\nconst CardComponent = ({ className, cardTitle, value, lastUpdate, cardSubtitle }) => (\n  <Grid item xs={12} md={3} component={Card} className={cx(styles.card, className)}>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>\n        {cardTitle}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h2\">\n        <CountUp start={0} end={value} duration={2.75} separator=\",\" />\n      </Typography>\n      <Typography color=\"textSecondary\">\n        {new Date(lastUpdate).toDateString()}\n      </Typography>\n      <Typography variant=\"body2\" component=\"p\">\n        {cardSubtitle}\n      </Typography>\n    </CardContent>\n  </Grid>\n);\n\nexport default CardComponent;\n","import React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport CardComponent from './Card/Card';\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <CardComponent\n          className={styles.infected}\n          cardTitle=\"Infected\"\n          value={confirmed.value}\n          lastUpdate={lastUpdate}\n          cardSubtitle=\"Number of active cases from COVID-19.\"\n        />\n        <CardComponent\n          className={styles.recovered}\n          cardTitle=\"Recovered\"\n          value={recovered.value}\n          lastUpdate={lastUpdate}\n          cardSubtitle=\"Number of recoveries from COVID-19.\"\n        />\n        <CardComponent\n          className={styles.deaths}\n          cardTitle=\"Deaths\"\n          value={deaths.value}\n          lastUpdate={lastUpdate}\n          cardSubtitle=\"Number of deaths caused by COVID-19.\"\n        />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Info;\n","import React, { useState, useEffect } from 'react';\r\nimport *as ReactBootStrap from 'react-bootstrap'; \r\nimport { isCompositeComponent } from 'react-dom/test-utils';\r\n\r\nimport { fetchCountries, fetchData, fetchCountries_Tabl, fetchData_Table } from '../../api';\r\n\r\nconst Table = ({countries_List, stats , data}) => {\r\n\r\n  // Stats show data of all countries\r\n  // if(stats.length){\r\n  //   console.log(stats);\r\n  // }\r\n    const renderCountries = (countries_List, index) =>{\r\n      return (\r\n        <tr key = {index}>\r\n                <td>{countries_List.name}</td>\r\n                {/* <td>Countries data</td> */}\r\n         </tr>\r\n      )\r\n    }\r\n\r\n    const country_map = (renderCountries) =>{\r\n      if (countries_List){\r\n        return countries_List.map(renderCountries)\r\n      }\r\n    }\r\n\r\n    return(\r\n        <ReactBootStrap.Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Country</th>\r\n              <th>Confirmed</th>\r\n              <th>Recovered</th>\r\n              <th>Deaths</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n           {country_map(renderCountries)}\r\n          </tbody>\r\n        </ReactBootStrap.Table>\r\n    )\r\n\r\n}\r\nexport default Table;","import React from 'react';\nimport *as ReactBootStrap from 'react-bootstrap'; \n\nimport { Cards, CountryPicker, Chart, TimeChart,Table } from './components';\nimport { fetchData, fetchCountries, fetchData_Table, fetchCountries_Table } from './api/';\nimport styles from './App.module.css';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n    stats : [],\n    country_List : [],\n    stats : []\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    const countries_List = await fetchCountries_Table();\n    this.setState({countries_List});\n\n    this.state.countries_List.forEach( async (country) =>{\n      const stats = await fetchData_Table(country);\n      \n      // Concatenate every list in to stats\n      this.setState({\n        stats: this.state.stats.concat([stats])\n      })\n\n    })\n\n\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n    if(country === ''){\n      this.setState({data, country: 'global'});\n    }\n    else{\n      this.setState({ data, country: country });\n    }\n  }\n  \n  render() {\n    const { data, country, countries_List, stats } = this.state;\n    \n    return (\n      <div className={styles.container}>\n      <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Cards data={data} />\n        <Chart data={data} country={country} /> \n        <TimeChart data={data} country={country} /> \n\n        {/* New stuff */}\n        <Table countries_List = {countries_List} stats = {stats} data={data} ></Table>\n\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__vw01A\",\"bar\":\"Chart_bar__2l5rF\",\"line\":\"Chart_line__1q9Rx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__35Nn7\",\"infected\":\"Cards_infected__23Yjj\",\"recovered\":\"Cards_recovered__5h5-n\",\"deaths\":\"Cards_deaths__-uH2U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1zHd7\"};"],"sourceRoot":""}